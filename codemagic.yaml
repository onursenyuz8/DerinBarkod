workflows:
  android_debug:
    name: Android Debug (stabil & oto)
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: main
          include: true

    environment:
      flutter: stable
      java: 17

    cache:
      cache_paths:
        - $HOME/.pub-cache
        - android/.gradle
        - .gradle

    scripts:
      - name: Versiyon bilgisi
        script: |
          flutter --version
          flutter doctor -v || true
          chmod +x android/gradlew || true

      - name: Android SDK 34 ve Build-Tools yükle
        script: |
          set -e
          export ANDROID_HOME=${ANDROID_SDK_ROOT:-/opt/android-sdk}
          yes | sdkmanager --licenses || true
          sdkmanager "platforms;android-34" "build-tools;34.0.0" "platform-tools" || true
          sdkmanager --list | head -n 50 || true

      # PROBLEM ÇIKARAN ADIMIN YERİNE: dosyaları BAŞTAN doğru içerikle yaz
      - name: Gradle/AGP pin (uyumluluk) — basit ve deterministik
        script: |
          set +e
          set -x
          cd android || exit 0

          # Paket adını değiştirmek istersen Codemagic env'de APPLICATION_ID=... tanımla
          APP_ID="${APPLICATION_ID:-com.derinwifi.barkod}"

          # 1) Gradle wrapper -> 8.7
          mkdir -p gradle/wrapper
          cat > gradle/wrapper/gradle-wrapper.properties <<'EOF'
          distributionBase=GRADLE_USER_HOME
          distributionPath=wrapper/dists
          zipStoreBase=GRADLE_USER_HOME
          zipStorePath=wrapper/dists
          distributionUrl=https\://services.gradle.org/distributions/gradle-8.7-all.zip
          EOF

          # 2) settings.gradle -> pluginManagement + AGP/Kotlin pin
          cat > settings.gradle <<'EOF'
          pluginManagement {
              repositories {
                  google()
                  mavenCentral()
                  gradlePluginPortal()
              }
          }

          plugins {
              id "dev.flutter.flutter-plugin-loader" version "1.0.0"
              id "com.android.application" version "8.6.0" apply false
              id "org.jetbrains.kotlin.android" version "1.9.24" apply false
          }

          include(":app")
          EOF

          # 3) top-level build.gradle (repo'lar sabit)
          cat > build.gradle <<'EOF'
          buildscript {
              repositories { google(); mavenCentral() }
              dependencies { classpath "com.android.tools.build:gradle:8.6.0" }
          }
          allprojects {
              repositories { google(); mavenCentral() }
          }
          EOF

          # 4) app/build.gradle -> AGP8 uyumlu, SDK 34, Java17, multidex
          cat > app/build.gradle <<EOF
          plugins {
              id "com.android.application"
              id "org.jetbrains.kotlin.android"
              id "dev.flutter.flutter-gradle-plugin"
          }

          android {
              namespace "${APP_ID}"
              compileSdkVersion 34

              defaultConfig {
                  applicationId "${APP_ID}"
                  minSdkVersion 21
                  targetSdkVersion 34
                  versionCode 1
                  versionName "1.0"
                  multiDexEnabled true
              }

              buildTypes {
                  release {
                      minifyEnabled false
                      shrinkResources false
                  }
                  debug {
                      minifyEnabled false
                  }
              }

              compileOptions {
                  sourceCompatibility JavaVersion.VERSION_17
                  targetCompatibility JavaVersion.VERSION_17
              }
              kotlinOptions {
                  jvmTarget = "17"
              }

              packagingOptions {
                  resources {
                      excludes += ["/META-INF/{AL2.0,LGPL2.1}", "META-INF/DEPENDENCIES"]
                  }
              }
          }

          dependencies {
              implementation "androidx.multidex:multidex:2.0.1"
          }
          EOF

          # 5) Manifest (package="" OLMAYACAK) — temiz şablon
          mkdir -p app/src/main
          cat > app/src/main/AndroidManifest.xml <<'EOF'
          <manifest xmlns:android="http://schemas.android.com/apk/res/android">
              <application
                  android:name="${applicationName}"
                  android:label="DerinBarkod"
                  android:icon="@mipmap/ic_launcher"
                  android:usesCleartextTraffic="true">
                  <activity
                      android:name=".MainActivity"
                      android:exported="true"
                      android:launchMode="singleTop"
                      android:theme="@style/LaunchTheme"
                      android:configChanges="orientation|keyboardHidden|keyboard|screenSize|smallestScreenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode"
                      android:hardwareAccelerated="true"
                      android:windowSoftInputMode="adjustResize">
                      <intent-filter>
                          <action android:name="android.intent.action.MAIN"/>
                          <category android:name="android.intent.category.LAUNCHER"/>
                      </intent-filter>
                  </activity>

                  <queries>
                      <intent>
                          <action android:name="android.intent.action.PROCESS_TEXT"/>
                          <data android:mimeType="text/plain"/>
                      </intent>
                  </queries>
              </application>
          </manifest>
          EOF

          echo "=== android dosyaları ==="
          ls -R .
          cd -
          set +x

      - name: Debug APK derle (stacktrace ile)
        script: |
          set -o pipefail
          flutter clean
          if ! flutter build apk --debug -v | tee build_log.txt; then
            echo "Flutter build düştü, gradle assembleDebug deneniyor..."
            (cd android && ./gradlew assembleDebug --stacktrace --no-daemon) | tee -a build_log.txt
          fi

      - name: Çıktıları listele ve APK'yi topla
        script: |
          echo "=== build/app/outputs ==="; ls -R build/app/outputs || true
          echo "=== android/app/build/outputs ==="; ls -R android/app/build/outputs || true
          mkdir -p artifacts
          cp -f build/app/outputs/flutter-apk/*.apk artifacts/ 2>/dev/null || true
          cp -f android/app/build/outputs/apk/**/*.apk artifacts/ 2>/dev/null || true
          cp -f android/app/build/outputs/apk/*.apk artifacts/ 2>/dev/null || true
          find build -type f -name "*.apk" -maxdepth 6 -print -exec cp -f {} artifacts/ \; || true
          echo "Artifacts içeriği:"; ls -lh artifacts || true

      - name: Hata özeti (varsa)
        script: |
          echo "===== FAILURE BLOĞU (varsa) =====" > failure_extract.txt
          awk '/FAILURE: Build failed with an exception./{flag=1} flag{print} /BUILD FAILED/{flag=0}' build_log.txt | tail -n 200 >> failure_extract.txt || true
          echo "================================="

          # Eğer hiç APK yoksa fail et, ki sebebi görelim
          if [ -z "$(ls -A artifacts/*.apk 2>/dev/null)" ]; then
            echo "APK bulunamadı (muhtemelen build düştü)."
            echo "---- Hata özeti ----"
            tail -n 120 failure_extract.txt || true
            exit 1
          fi

    artifacts:
      - artifacts/*.apk
      - build_log.txt
      - failure_extract.txt
