
workflows:
  debug_apk:
    name: Android Debug APK
    max_build_duration: 60
    environment:
      flutter: stable
      vars:
        # Optional: If you store google-services.json content as a single-line base64 string in CM_GOOGLESERVICES_JSON
        # Codemagic → App settings → Environment variables (secure)
        CM_GOOGLESERVICES_JSON: ""
      groups:
        - keystore_creds  # (Optional) define this group in Codemagic if you want to reuse variables
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: "main"
          include: true
          source: true
    scripts:
      - name: Flutter version & doctor
        script: |
          flutter --version
          flutter doctor -v
      - name: Ensure Android SDK licenses accepted
        script: yes | sdkmanager --licenses || true
      - name: Create android/local.properties
        script: |
          mkdir -p android
          # Codemagic default Flutter SDK & Android SDK paths
          echo "flutter.sdk=/Users/builder/programs/flutter" > android/local.properties
          echo "sdk.dir=/usr/local/share/android-sdk" >> android/local.properties
          cat android/local.properties
      - name: (Optional) Write google-services.json if provided
        script: |
          if [ -n "$CM_GOOGLESERVICES_JSON" ]; then
            echo "$CM_GOOGLESERVICES_JSON" | base64 --decode > android/app/google-services.json
            echo "google-services.json written."
          else
            echo "CM_GOOGLESERVICES_JSON not set. Skipping Firebase."
          fi
      - name: Get Flutter packages
        script: |
          flutter pub get
      - name: Build debug APK
        script: |
          flutter build apk --debug
    artifacts:
      - build/app/outputs/flutter-apk/app-debug.apk

  release_apk_unsigned:
    name: Android Release APK (unsigned)
    max_build_duration: 60
    environment:
      flutter: stable
      vars:
        CM_GOOGLESERVICES_JSON: ""
    scripts:
      - name: Setup local.properties
        script: |
          echo "flutter.sdk=/Users/builder/programs/flutter" > android/local.properties
          echo "sdk.dir=/usr/local/share/android-sdk" >> android/local.properties
      - name: (Optional) Write google-services.json
        script: |
          if [ -n "$CM_GOOGLESERVICES_JSON" ]; then
            echo "$CM_GOOGLESERVICES_JSON" | base64 --decode > android/app/google-services.json
          fi
      - name: Build release APK (unsigned)
        script: |
          flutter build apk --release
    artifacts:
      - build/app/outputs/flutter-apk/app-release.apk

  release_aab_signed:
    name: Android App Bundle (signed)
    max_build_duration: 60
    environment:
      flutter: stable
      groups:
        - keystore_creds     # create this in Codemagic and include the 4 vars below
      vars:
        CM_GOOGLESERVICES_JSON: ""
        # Required env vars in the "keystore_creds" group:
        # CM_KEYSTORE:        base64 of your keystore file (e.g. derinbarkod.jks)
        # CM_KEYSTORE_PASSWORD: password for the keystore
        # CM_KEY_ALIAS:       alias name within the keystore
        # CM_KEY_PASSWORD:    password for the key alias
    scripts:
      - name: Setup local.properties
        script: |
          echo "flutter.sdk=/Users/builder/programs/flutter" > android/local.properties
          echo "sdk.dir=/usr/local/share/android-sdk" >> android/local.properties
      - name: (Optional) Write google-services.json
        script: |
          if [ -n "$CM_GOOGLESERVICES_JSON" ]; then
            echo "$CM_GOOGLESERVICES_JSON" | base64 --decode > android/app/google-services.json
          fi
      - name: Prepare keystore from env (base64 → file)
        script: |
          if [ -z "$CM_KEYSTORE" ]; then
            echo "CM_KEYSTORE not set. Please add keystore_creds group with CM_KEYSTORE, CM_KEYSTORE_PASSWORD, CM_KEY_ALIAS, CM_KEY_PASSWORD."
            exit 1
          fi
          echo "$CM_KEYSTORE" | base64 --decode > android/app/derinbarkod.keystore
          ls -l android/app/derinbarkod.keystore
      - name: Patch Gradle signingConfig if missing (non-destructive)
        script: |
          SIGN_BLOCK=$(cat << 'EOF'
              signingConfigs {
                  release {
                      storeFile file("derinbarkod.keystore")
                      storePassword System.getenv("CM_KEYSTORE_PASSWORD")
                      keyAlias System.getenv("CM_KEY_ALIAS")
                      keyPassword System.getenv("CM_KEY_PASSWORD")
                  }
              }
              buildTypes {
                  release {
                      signingConfig signingConfigs.release
                      minifyEnabled false
                      shrinkResources false
                  }
              }
          EOF
          )
          APP_GRADLE="android/app/build.gradle"
          # If 'signingConfigs.release' not in file, inject minimal block
          if ! grep -q "signingConfigs.release" "$APP_GRADLE"; then
            echo "Injecting signing config into $APP_GRADLE"
            # Insert under 'android {' block
            awk -v block="$SIGN_BLOCK" '
              BEGIN{printed=0}
              /android[[:space:]]*\{/ && !printed {print; print block; printed=1; next}
              {print}
            ' "$APP_GRADLE" > "$APP_GRADLE.tmp" && mv "$APP_GRADLE.tmp" "$APP_GRADLE"
          else
            echo "Signing config already present."
          fi
          echo "---- build.gradle (head) ----"
          head -n 80 android/app/build.gradle || true
      - name: Build signed AAB
        script: |
          flutter pub get
          flutter build appbundle --release
    artifacts:
      - build/app/outputs/bundle/release/app-release.aab
